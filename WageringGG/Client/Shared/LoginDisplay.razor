@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager navManager
@inject SignOutSessionStateManager SignOutManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="d-inline-block ml-2">
    <AuthorizeView>
        <Authorized>
            <a class="btn btn-secondary mr-1" href="/profile">
                <i class="mdi mdi-account"></i>
                @context.User.Identity.Name
            </a>
            <button class="btn btn-dark" @onclick="BeginSignOut">
                <i class="mdi mdi-logout"></i>
                Log out
            </button>
        </Authorized>
        <NotAuthorized>
            <a class="btn btn-secondary mr-1" href="authentication/register" @onclick="ClearStorage">
                <i class="mdi mdi-account-plus"></i>
                Register
            </a>
            <a class="btn btn-dark" href="authentication/login" @onclick="ClearStorage">
                <i class="mdi mdi-login"></i>
                Log in
            </a>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        await ClearStorage();
        navManager.NavigateTo("authentication/logout");
    }

    private async Task ClearStorage()
    {
        await localStorage.ClearAsync();
    }
}
