<div class="card border-primary">
    <div class="card-body">
        <h4 class="card-title">@Wager.Title</h4>
        <div class="card-text">
            <div class="table-responsive">
                <table class="table table-borderless text-center">
                    <thead>
                        <tr>
                            <th scope="col" class="text-nowrap">Minimum <small class="text-muted">(XLM)</small></th>
                            <th scope="col" class="text-nowrap">Maximum <small class="text-muted">(XLM)</small></th>
                            <th scope="col">Challenges</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@NumDisplay(Wager.MinimumWager)</td>
                            <td>@NumDisplay(Wager.MaximumWager)</td>
                            <td>@Wager.ChallengeCount</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="d-flex">
                @if (Link != null)
                {
                    <a class="btn btn-outline-secondary" href="@Link">View</a>
                }
                <TimeAgo Date="Wager.Date" Class="mt-auto ml-auto text-muted" />
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Link { get; set; }
    [Parameter]
    public Wager Wager { get; set; }

    private string NumDisplay(decimal? num)
    {
        return num.HasValue ? num.ToString() : "-";
    }
}
